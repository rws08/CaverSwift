//
//  ABITests.swift
//  Caver-swiftTests
//
//  Created by won on 2021/05/20.
//

import XCTest
@testable import Caver_swift
@testable import SwiftyJSON
@testable import BigInt

class ABITests: XCTestCase {

    override func setUpWithError() throws {
        // Put setup code here. This method is called before the invocation of each test method in the class.
    }

    override func tearDownWithError() throws {
        // Put teardown code here. This method is called after the invocation of each test method in the class.
    }

//    func testExample() throws {
//        let caver = Caver("https://kaikas.cypress.klaytn.net:8651")
//        do {
//            if let file  = Bundle(for: type(of: self)).url(forResource: "test", withExtension: "json"){
//                let data  = try Data(contentsOf: file)
//                let json = try JSON(data: data)
//
//                let contract = try Contract(caver, json["abi"].rawString()!, "0x3b87b84f3b629ef0afec5ed8e3b6a7df977ba902")
//
//            }else{
//                print("no file")
//            }
//        } catch {
//            print(error.localizedDescription)
//
//        }
//    }
    //MARK: encodeFunctionSig
    func testEncodeFunctionSignatureTest() throws {
        XCTAssertEqual("0xcdcd77c0", try ABI.encodeFunctionSignature("baz(uint32,bool)"))
        XCTAssertEqual("0xfce353f6", try ABI.encodeFunctionSignature("bar(bytes3[2])"))
        XCTAssertEqual("0xa5643bf2", try ABI.encodeFunctionSignature("sam(bytes,bool,uint256[])"))
    }
    
    //MARK: encodeFunctionCall
    func testEncodeFunctionCallTest() throws {
        XCTAssertEqual("0xcdcd77c000000000000000000000000000000000000000000000000000000000000000450000000000000000000000000000000000000000000000000000000000000001", try ABI.encodeFunctionCall("baz(uint32,bool)", ["uint32", "bool"], [69, true]))
        
        XCTAssertEqual("0xfce353f661626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeFunctionCall("bar(bytes3[2])", ["bytes3[2]"], [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))
        
        XCTAssertEqual("0xa5643bf20000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000464617665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003", try ABI.encodeFunctionCall("sam(bytes,bool,uint256[])", ["bytes", "bool", "uint256[]"], ["dave".data(using: .utf8)!, true, [1, 2, 3]]))
    }
    
    //MARK: encodeParameter
    func testEncodeBoolType() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool", false))
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000001", try ABI.encodeParameter("bool", true))
    }

    func testEncodeUintType() throws {
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000ff", try ABI.encodeParameter("uint", BigInt(255)))
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000ffff", try ABI.encodeParameter("uint", BigInt(65535)))
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000010000", try ABI.encodeParameter("uint", BigInt(65536)))
        XCTAssertEqual("0000000000000000000000000000000000000000000000ffffffffffffffffff", try ABI.encodeParameter("uint", BigInt("4722366482869645213695")))
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("uint", BigInt.zero))
    }
    
    func testEncodeIntType() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("int", BigInt.zero))
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000007f", try ABI.encodeParameter("int", 127))
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000007fff", try ABI.encodeParameter("int", 32767))
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000007fffffff", try ABI.encodeParameter("int", 2147483647))
    }
    
    func testEncodeAddressType() throws {
        XCTAssertEqual("000000000000000000000000be5422d15f39373eb0a97ff8c10fbd0e40e29338", try ABI.encodeParameter("address", "0xbe5422d15f39373eb0a97ff8c10fbd0e40e29338"))
    }
    
    func testEncodeUtf8StringType() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020"
                        + "000000000000000000000000000000000000000000000000000000000000000d"
                        + "48656c6c6f2c20776f726c642100000000000000000000000000000000000000", try ABI.encodeParameter("string", "Hello, world!"))
    }
    
    func testEncodeStaticBytesType() throws {
        XCTAssertEqual("0001020304050000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes6", Data([0, 1, 2, 3, 4, 5])))
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes1", Data([0])))
        XCTAssertEqual("7f00000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes1", Data([127])))
        XCTAssertEqual("6461766500000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes4", "dave".data(using: .utf8)!))
    }
    
    func testEncodeDynamicBytesType() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020"
                        + "0000000000000000000000000000000000000000000000000000000000000006"
                        + "0001020304050000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes", Data([0, 1, 2, 3, 4, 5])))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020"
                        + "0000000000000000000000000000000000000000000000000000000000000001"
                        + "0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes", Data([0])))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020"
                        + "0000000000000000000000000000000000000000000000000000000000000004"
                        + "6461766500000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes", "dave".data(using: .utf8)!))
        
        let loremIpsum = ("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod "
            + "tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim "
            + "veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex "
            + "ea commodo consequat. Duis aute irure dolor in reprehenderit in "
            + "voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur "
            + "sint occaecat cupidatat non proident, sunt in culpa qui officia "
            + "deserunt mollit anim id est laborum.").data(using: .utf8)!
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020"
                        + "00000000000000000000000000000000000000000000000000000000000001bd"
                        + "4c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73"
                        + "656374657475722061646970697363696e6720656c69742c2073656420646f20"
                        + "656975736d6f642074656d706f7220696e6369646964756e74207574206c6162"
                        + "6f726520657420646f6c6f7265206d61676e6120616c697175612e2055742065"
                        + "6e696d206164206d696e696d2076656e69616d2c2071756973206e6f73747275"
                        + "6420657865726369746174696f6e20756c6c616d636f206c61626f726973206e"
                        + "69736920757420616c697175697020657820656120636f6d6d6f646f20636f6e"
                        + "7365717561742e2044756973206175746520697275726520646f6c6f7220696e"
                        + "20726570726568656e646572697420696e20766f6c7570746174652076656c69"
                        + "7420657373652063696c6c756d20646f6c6f726520657520667567696174206e"
                        + "756c6c612070617269617475722e204578636570746575722073696e74206f63"
                        + "63616563617420637570696461746174206e6f6e2070726f6964656e742c2073"
                        + "756e7420696e2063756c706120717569206f666669636961206465736572756e"
                        + "74206d6f6c6c697420616e696d20696420657374206c61626f72756d2e000000", try ABI.encodeParameter("bytes", loremIpsum))
    }
    
    func testEncodeDynamicArrayTest() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020"
                        + "0000000000000000000000000000000000000000000000000000000000000003"
                        + "0000000000000000000000000000000000000000000000000000000000000001"
                        + "0000000000000000000000000000000000000000000000000000000000000002"
                        + "0000000000000000000000000000000000000000000000000000000000000003", try ABI.encodeParameter("uint256[]", [BigInt(1), BigInt(2), BigInt(3)]))
    }
    
    func testEncodeStaticArrayTest() throws {
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000000a"
                        + "0000000000000000000000000000000000000000000000007fffffffffffffff", try ABI.encodeParameter("uint256[2]", [BigInt(10), BigInt(Int.max)]))
    }
    
    func testEncodeArrayStaticType() throws {
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003", try ABI.encodeParameter("uint256[3]", [1, 2, 3]))

        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool[2]", [true, false]))

        XCTAssertEqual("61626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes3[2]", ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]))

        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003", try ABI.encodeParameter("uint256[]", [1, 2, 3]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool[]", [true, false]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000261626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes3[]", ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]))
        
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003", try ABI.encodeParameter("uint256[3][2]", [[1, 2, 3], [1, 2, 3]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool[2][2]", [[true, false], [true, false]]))
        
        XCTAssertEqual("61626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes3[2][1]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003", try ABI.encodeParameter("uint256[][2]", [[1, 2, 3], [1, 2, 3]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool[][2]", [[true, false], [true, false]]))
        
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000261626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes3[][1]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))
        
        XCTAssertEqualtry ABI.encodeParameter("uint256[3][]", [[1, 2, 3], [1, 2, 3]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool[2][]", [[true, false]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000161626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes3[2][]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))
        
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ctry ABI.encodeParameter("uint256[][]", [[1, 2, 3], [1, 2, 3]]))
        
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool[][]", [[true, false], [true, false]]))
        
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000261626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes3[][]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))
    }
    
    func testEncodeArrayDynamicType() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616161000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036262620000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("string[2]", ["aaa", "bbb"]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616263000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes[2]", ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]))

        XCTAssertEqualtry ABI.encodeParameter("string[]", ["aaa", "bbb"]))

        XCTAssertEqualtry ABI.encodeParameter("bytes[]", ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]))
        
        XCTAssertEqualtry ABI.encodeParameter("string[2][2]", [["aaa", "bbb"], ["aaa", "bbb"]]))
        
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616263000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036465660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616263000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes[2][2]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))

        XCTAssertEqualtry ABI.encodeParameter("string[][2]", [["aaa", "bbb"], ["aaa", "bbb"]]))

        XCTAssertEqualtry ABI.encodeParameter("bytes[][2]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))

        XCTAssertEqualtry ABI.encodeParameter("string[2][]", [["aaa", "bbb"], ["aaa", "bbb"]]))

        XCTAssertEqualtry ABI.encodeParameter("bytes[2][]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))

        XCTAssertEqualtry ABI.encodeParameter("string[][]", [["aaa", "bbb"], ["aaa", "bbb"]]))

        XCTAssertEqualtry ABI.encodeParameter("bytes[][]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))
    }
    
    func testEncodeTupleType() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "0000000000000000000000000000000000000000000000000000000000000014" +
                        "77656c636f6d6520746f20657468657265756d2e000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000014" +
                        "77656c636f6d6520746f20657468657265756d2e000000000000000000000000", try ABI.encodeParameter("tuple(string,string)", ["welcome to ethereum.", "welcome to ethereum."]))
    }
    
    func testBuildFunctionStringTest() throws {
        let caver = Caver("https://kaikas.cypress.klaytn.net:8651")
        if let file  = Bundle(for: type(of: self)).url(forResource: "testFunction", withExtension: "json"){
            let data  = try Data(contentsOf: file)
            let contract = try Contract(caver, String(data: data, encoding: .utf8)!)
     
            XCTAssertEqual("b(string)", try ABI.buildFunctionString(contract.getMethod("b")))
            XCTAssertEqual("g(uint256)", try ABI.buildFunctionString(contract.getMethod("g")))
            XCTAssertEqual("h(bytes32[])", try ABI.buildFunctionString(contract.getMethod("h")))
            
            XCTAssertEqual("staticStruct((uint256,uint256))", try ABI.buildFunctionString(contract.getMethod("staticStruct")))
            XCTAssertEqual("dynamicStruct((uint256,string))", try ABI.buildFunctionString(contract.getMethod("dynamicStruct")))
            XCTAssertEqual("structArray((uint256,uint256[],(uint256,uint256)[])[])", try ABI.buildFunctionString(contract.getMethod("structArray")))
        }else{
            print("no file")
        }
    }
}

