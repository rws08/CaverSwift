//
//  ABITests.swift
//  CaverSwiftTests
//
//  Created by won on 2021/05/20.
//

import XCTest
@testable import CaverSwift
@testable import BigInt

class ABITests: XCTestCase {

    override func setUpWithError() throws {
        // Put setup code here. This method is called before the invocation of each test method in the class.
    }

    override func tearDownWithError() throws {
        // Put teardown code here. This method is called after the invocation of each test method in the class.
    }
    
    //MARK: encodeFunctionSig
    func testEncodeFunctionSignatureTest() throws {
        XCTAssertEqual("0xcdcd77c0", try ABI.encodeFunctionSignature("baz(uint32,bool)"))
        XCTAssertEqual("0xfce353f6", try ABI.encodeFunctionSignature("bar(bytes3[2])"))
        XCTAssertEqual("0xa5643bf2", try ABI.encodeFunctionSignature("sam(bytes,bool,uint256[])"))
    }
    
    //MARK: encodeEventSig
    func testEncodeEventSignature() throws {
        XCTAssertEqual("0x50cb9fe53daa9737b786ab3646f04d0150dc50ef4e75f59509d83667ad5adb20", try ABI.encodeEventSignature("Deposit(address,hash256,uint256)"))
        XCTAssertEqual("0x71e71a8458267085d5ab16980fd5f114d2d37f232479c245d523ce8d23ca40ed", try ABI.encodeEventSignature("Notify(uint256,uint256)"))
    }
    
    //MARK: encodeFunctionCall
    func testEncodeFunctionCallTest() throws {
        XCTAssertEqual("0xcdcd77c000000000000000000000000000000000000000000000000000000000000000450000000000000000000000000000000000000000000000000000000000000001", try ABI.encodeFunctionCall("baz(uint32,bool)", ["uint32", "bool"], [69, true]))
        
        XCTAssertEqual("0xfce353f661626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeFunctionCall("bar(bytes3[2])", ["bytes3[2]"], [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))
        
        XCTAssertEqual("0xa5643bf20000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000464617665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003", try ABI.encodeFunctionCall("sam(bytes,bool,uint256[])", ["bytes", "bool", "uint256[]"], ["dave".data(using: .utf8)!, true, [1, 2, 3]]))
    }
    
    //MARK: encodeParameter
    func testEncodeBoolType() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool", false))
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000001", try ABI.encodeParameter("bool", true))
    }

    func testEncodeUintType() throws {
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000ff", try ABI.encodeParameter("uint", BigInt(255)))
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000ffff", try ABI.encodeParameter("uint", BigInt(65535)))
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000010000", try ABI.encodeParameter("uint", BigInt(65536)))
        XCTAssertEqual("0000000000000000000000000000000000000000000000ffffffffffffffffff", try ABI.encodeParameter("uint", BigInt("4722366482869645213695")))
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("uint", BigInt.zero))
    }
    
    func testEncodeIntType() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("int", BigInt.zero))
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000007f", try ABI.encodeParameter("int", 127))
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000007fff", try ABI.encodeParameter("int", 32767))
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000007fffffff", try ABI.encodeParameter("int", 2147483647))
    }
    
    func testEncodeAddressType() throws {
        XCTAssertEqual("000000000000000000000000be5422d15f39373eb0a97ff8c10fbd0e40e29338", try ABI.encodeParameter("address", "0xbe5422d15f39373eb0a97ff8c10fbd0e40e29338"))
    }
    
    func testEncodeUtf8StringType() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020"
                        + "000000000000000000000000000000000000000000000000000000000000000d"
                        + "48656c6c6f2c20776f726c642100000000000000000000000000000000000000", try ABI.encodeParameter("string", "Hello, world!"))
    }
    
    func testEncodeStaticBytesType() throws {
        XCTAssertEqual("0001020304050000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes6", Data([0, 1, 2, 3, 4, 5])))
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes1", Data([0])))
        XCTAssertEqual("7f00000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes1", Data([127])))
        XCTAssertEqual("6461766500000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes4", "dave".data(using: .utf8)!))
    }
    
    func testEncodeDynamicBytesType() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020"
                        + "0000000000000000000000000000000000000000000000000000000000000006"
                        + "0001020304050000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes", Data([0, 1, 2, 3, 4, 5])))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020"
                        + "0000000000000000000000000000000000000000000000000000000000000001"
                        + "0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes", Data([0])))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020"
                        + "0000000000000000000000000000000000000000000000000000000000000004"
                        + "6461766500000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes", "dave".data(using: .utf8)!))
        
        let loremIpsum = ("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod "
            + "tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim "
            + "veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex "
            + "ea commodo consequat. Duis aute irure dolor in reprehenderit in "
            + "voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur "
            + "sint occaecat cupidatat non proident, sunt in culpa qui officia "
            + "deserunt mollit anim id est laborum.").data(using: .utf8)!
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020"
                        + "00000000000000000000000000000000000000000000000000000000000001bd"
                        + "4c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73"
                        + "656374657475722061646970697363696e6720656c69742c2073656420646f20"
                        + "656975736d6f642074656d706f7220696e6369646964756e74207574206c6162"
                        + "6f726520657420646f6c6f7265206d61676e6120616c697175612e2055742065"
                        + "6e696d206164206d696e696d2076656e69616d2c2071756973206e6f73747275"
                        + "6420657865726369746174696f6e20756c6c616d636f206c61626f726973206e"
                        + "69736920757420616c697175697020657820656120636f6d6d6f646f20636f6e"
                        + "7365717561742e2044756973206175746520697275726520646f6c6f7220696e"
                        + "20726570726568656e646572697420696e20766f6c7570746174652076656c69"
                        + "7420657373652063696c6c756d20646f6c6f726520657520667567696174206e"
                        + "756c6c612070617269617475722e204578636570746575722073696e74206f63"
                        + "63616563617420637570696461746174206e6f6e2070726f6964656e742c2073"
                        + "756e7420696e2063756c706120717569206f666669636961206465736572756e"
                        + "74206d6f6c6c697420616e696d20696420657374206c61626f72756d2e000000", try ABI.encodeParameter("bytes", loremIpsum))
    }
    
    func testEncodeDynamicArrayTest() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020"
                        + "0000000000000000000000000000000000000000000000000000000000000003"
                        + "0000000000000000000000000000000000000000000000000000000000000001"
                        + "0000000000000000000000000000000000000000000000000000000000000002"
                        + "0000000000000000000000000000000000000000000000000000000000000003", try ABI.encodeParameter("uint256[]", [BigInt(1), BigInt(2), BigInt(3)]))
    }
    
    func testEncodeStaticArrayTest() throws {
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000000a"
                        + "0000000000000000000000000000000000000000000000007fffffffffffffff", try ABI.encodeParameter("uint256[2]", [BigInt(10), BigInt(Int.max)]))
    }
    
    func testEncodeArrayStaticType() throws {
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003", try ABI.encodeParameter("uint256[3]", [1, 2, 3]))

        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool[2]", [true, false]))

        XCTAssertEqual("61626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes3[2]", ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]))

        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003", try ABI.encodeParameter("uint256[]", [1, 2, 3]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool[]", [true, false]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000261626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes3[]", ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]))
        
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003", try ABI.encodeParameter("uint256[3][2]", [[1, 2, 3], [1, 2, 3]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool[2][2]", [[true, false], [true, false]]))
        
        XCTAssertEqual("61626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes3[2][1]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ctry ABI.encodeParameter("uint256[][2]", [[1, 2, 3], [1, 2, 3]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool[][2]", [[true, false], [true, false]]))
        
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000261626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes3[][1]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))
        
        XCTAssertEqualtry ABI.encodeParameter("uint256[3][]", [[1, 2, 3], [1, 2, 3]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool[2][]", [[true, false]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000161626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes3[2][]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))
        
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ctry ABI.encodeParameter("uint256[][]", [[1, 2, 3], [1, 2, 3]]))
        
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bool[][]", [[true, false], [true, false]]))
        
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000261626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes3[][]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))
    }
    
    func testEncodeArrayDynamicType() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616161000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036262620000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("string[2]", ["aaa", "bbb"]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616263000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes[2]", ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]))

        XCTAssertEqualtry ABI.encodeParameter("string[]", ["aaa", "bbb"]))

        XCTAssertEqualtry ABI.encodeParameter("bytes[]", ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]))
        
        XCTAssertEqualtry ABI.encodeParameter("string[2][2]", [["aaa", "bbb"], ["aaa", "bbb"]]))
        
        XCTAssertEqualtry ABI.encodeParameter("bytes[2][2]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))

        XCTAssertEqualtry ABI.encodeParameter("string[][2]", [["aaa", "bbb"], ["aaa", "bbb"]]))

        XCTAssertEqualtry ABI.encodeParameter("bytes[][2]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))

        XCTAssertEqualtry ABI.encodeParameter("string[2][]", [["aaa", "bbb"], ["aaa", "bbb"]]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616263000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036465660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616263000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036465660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("bytes[2][]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))

        XCTAssertEqualtry ABI.encodeParameter("string[][]", [["aaa", "bbb"], ["aaa", "bbb"]]))

        XCTAssertEqualtry ABI.encodeParameter("bytes[][]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]))
    }
    
    func testEncodeTupleType() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "0000000000000000000000000000000000000000000000000000000000000014" +
                        "77656c636f6d6520746f20657468657265756d2e000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000014" +
                        "77656c636f6d6520746f20657468657265756d2e000000000000000000000000", try ABI.encodeParameter("tuple(string,string)", ["welcome to ethereum.", "welcome to ethereum."]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "0000000000000000000000000000000000000000000000000000000000000014" +
                        "77656c636f6d6520746f20657468657265756d2e000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000014" +
                        "77656c636f6d6520746f20657468657265756d2e000000000000000000000000", try ABI.encodeParameter("tuple(bytes,bytes)", ["0x77656c636f6d6520746f20657468657265756d2e", "0x77656c636f6d6520746f20657468657265756d2e"]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020" +
                        "0000000000000000000000000000000000000000000000000000000000000060" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "000000000000000000000000000000000000000000000000000000000001e663" +
                        "0000000000000000000000000000000000000000000000000000000000000014" +
                        "77656c636f6d6520746f20657468657265756d2e000000000000000000000000", try ABI.encodeParameter("tuple(bytes,bool,uint256)", ["0x77656c636f6d6520746f20657468657265756d2e", true, 124515]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff69" +
                        "0000000000000000000000000175010374017501037401750103740175010374" +
                        "0000000000000000000000000000000000000000000000000000000000000005" +
                        "68656c6c6f000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("tuple(string,tuple(bool,int256),address)", ["hello", [true, -151], "0x0175010374017501037401750103740175010374"]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "0000000000000000000000000000000000000000000000000000000000000000" +
                        "00000000000000000000000081017589ab81017589ab81017589ab81017589ab" +
                        "00000000000000000000000081017589ab81017589ab81017589ab81017589ab" +
                        "00000000000000000000000000000000000000000000000000000000000000a0" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "000000000000000000000000000000000000000000000000000000000000000a" +
                        "737472696e67204f6e6500000000000000000000000000000000000000000000" +
                        "000000000000000000000000000000000000000000000000000000000000000a" +
                        "737472696e672054776f00000000000000000000000000000000000000000000", try ABI.encodeParameter("tuple(tuple(bool,bool),tuple(address,address),tuple(string,string))", [[true, false], ["0x81017589ab81017589ab81017589ab81017589ab", "0x81017589ab81017589ab81017589ab81017589ab"], ["string One", "string Two"]]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "00000000000000000000000081017589ab81017589ab81017589ab81017589ab" +
                        "0000000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000000" +
                        "00000000000000000000000000000000000000000000000000000000000000a0" +
                        "000000000000000000000000ec2270c849236333c86834728e783cd2f789088e" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "000000000000000000000000000000000000000000000000000000000000000b" +
                        "0ab1394581edfa2ef9ca71000000000000000000000000000000000000000000" +
                        "000000000000000000000000000000000000000000000000000000000000000b" +
                        "15abe391df19aef19a4561000000000000000000000000000000000000000000", try ABI.encodeParameter("tuple(tuple(tuple(bool,bool),tuple(bytes,bytes),tuple(address,bool)),address)", [[[false, false],["0xab1394581edfa2ef9ca71", "0x15abe391df19aef19a4561"],["0xec2270c849236333c86834728e783cd2f789088e", true]], "0x81017589ab81017589ab81017589ab81017589ab"]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020" +
            "0000000000000000000000000000000000000000000000000000000000000001" +
            "00000000000000000000000000000000000000000000000000000000000000a0" +
            "0000000000000000000000000000000000000000000000000000000000000000" +
            "0000000000000000000000001981710abe1981710abe1981710abe1981710abe" +
            "0000000000000000000000001981710abe1981710abe1981710abe1981710abe" +
            "0000000000000000000000000000000000000000000000000000000000000007" +
            "74657374696e6700000000000000000000000000000000000000000000000000", try ABI.encodeParameter("tuple(bool,string,bool,tuple(address,address))", [true, "testing", false, ["0x1981710abe1981710abe1981710abe1981710abe", "0x1981710abe1981710abe1981710abe1981710abe"]]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020" +
                        "0000000000000000000000001981710abe1981710abe1981710abe1981710abe" +
                        "0000000000000000000000001981710abe1981710abe1981710abe1981710abe" +
                        "0000000000000000000000000000000000000000000000000000000000000060" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff861" +
                        "000000000000000000000000000000000000000000000000000000000002f5e2" +
                        "00000000000000000000000000000000000000000000000000000000000000c0" +
                        "0000000000000000000000000000000000000000000000000000000000000011" +
                        "7374727563747320617265206772656174000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000015" +
                        "736f206d616e7920706f73736962696c69746965730000000000000000000000", try ABI.encodeParameter("tuple(address,address,tuple(string,tuple(int256,int256),string))", ["0x1981710abe1981710abe1981710abe1981710abe", "0x1981710abe1981710abe1981710abe1981710abe", ["structs are great", [-1951, 194018], "so many possibilities"]]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18" +
                        "fffffffffffffffffffffffffffffffffffffffffffffffffffffffffee8e377" +
                        "abdef18710a18a18abdef18710a18a18abdef18710a18a180000000000000000" +
                        "abdef18710a18a18000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "0000000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000120" +
                        "000000000000000000000000000000000000000000000000000000000000000f" +
                        "74657374696e672074657374696e670000000000000000000000000000000000", try ABI.encodeParameter("tuple(bool,tuple(bytes32,int256,tuple(bytes24,bytes8)),tuple(bool,bool,bool),string)", [true, ["0xabdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18", -18291849, ["0xabdef18710a18a18abdef18710a18a18abdef18710a18a18", "0xabdef18710a18a18"]], [false, true, false], "testing testing"]))

        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000361616100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003626262000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036363630000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("tuple(string[3],bool)", [["aaa", "bbb", "ccc"], false]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000361616100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003626262000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036363630000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("tuple(bool,string[3],bool)", [true, ["aaa", "bbb", "ccc"], false]))

        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000361616100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003626262000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036363630000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("tuple(bool,string[],bool)", [true, ["aaa", "bbb", "ccc"], false]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006f00000000000000000000000000000000000000000000000000000000000000de000000000000000000000000000000000000000000000000000000000000014d0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("tuple(bool,uint256[3],bool)", [true, [111, 222, 333], false]))

        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006f00000000000000000000000000000000000000000000000000000000000000de000000000000000000000000000000000000000000000000000000000000014d", try ABI.encodeParameter("tuple(bool,uint256[],bool)", [true, [111, 222, 333], false]))

        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000036161610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000362626200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003636363000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000363636300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003646464000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036666660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("tuple(string[3],bool)[]", [[["aaa", "bbb", "ccc"], false], [["ccc", "ddd", "fff"], false]]))

        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000036161610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000362626200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003636363000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000363636300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003646464000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036666660000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("tuple(string[3],bool)[2]", [[["aaa", "bbb", "ccc"], false], [["ccc", "ddd", "fff"], false]]))

        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006f00000000000000000000000000000000000000000000000000000000000000de000000000000000000000000000000000000000000000000000000000000014d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001bc000000000000000000000000000000000000000000000000000000000000022b000000000000000000000000000000000000000000000000000000000000029a0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameter("tuple(bool,uint256[3],bool)[]", [[true, [111, 222, 333], false], [true, [444, 555, 666], false]]))
    }
    
    func testEncodeParametersWithTuple() throws {
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "0000000000000000000000000000000000000000000000000000000000000004" +
                        "7768617400000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "0000000000000000000000000000000000000000000000000000000000000009" +
                        "7768617420776861740000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000009" +
                        "7768617420776861740000000000000000000000000000000000000000000000", try ABI.encodeParameters(["string", "tuple(string,string)"], ["what", ["what what", "what what"]]))

        XCTAssertEqual("abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e", try ABI.encodeParameters(["tuple(bytes32,bool)", "tuple(bool,address)"], [["0xabdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18", true], [true, "0x77656c636f6d6520746f20657468657265756d2e"]]))

        XCTAssertEqual("00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "0000000000000000000000000000000000000000000000000000000000000094" +
                        "0000000000000000000000000000000000000000000000000000000000001716" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18" +
                        "abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18", try ABI.encodeParameters(["tuple(address,uint256)", "tuple(uint256,bool)", "tuple(bytes32,bytes32)"], [["0x77656c636f6d6520746f20657468657265756d2e", 148], [5910, true], ["0xabdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18", "0xabdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18"]]))
        
        XCTAssertEqual("00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "0000000000000000000000000000000000000000000000000000000000000000" +
                        "00000000000000000000000000000000000000000000000000000000000000c0" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "0000000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "00000000000000000000000000000000000000000000000000000000000000a0" +
                        "00000000000000000000000000000000000000000000000000000000000000b6" +
                        "0000000000000000000000000000000000000000000000000000000000000791" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "000000000000000000000000000000000000000000000000000000000000000b" +
                        "0ab1394581edfa2ef9ca71000000000000000000000000000000000000000000" +
                        "000000000000000000000000000000000000000000000000000000000000000b" +
                        "15abe391df19aef19a4561000000000000000000000000000000000000000000", try ABI.encodeParameters(["tuple(tuple(address,address),tuple(bool,bool))", "tuple(tuple(bool,bool),tuple(bytes,bytes),tuple(uint256,uint256))", "address"], [[["0x77656c636f6d6520746f20657468657265756d2e", "0x77656c636f6d6520746f20657468657265756d2e"], [true, false]], [[false, true], ["0xab1394581edfa2ef9ca71", "0x15abe391df19aef19a4561"], [182, 1937]], "0x77656c636f6d6520746f20657468657265756d2e"]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000060" +
                        "00000000000000000000000000000000000000000000000000000000000001c0" +
                        "0000000000000000000000000000000000000000000000000000000000000200" +
                        "0000000000000000000000000000000000000000000000000000000000004790" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "0000000000000000000000000000000000000000000000000000000000000060" +
                        "00000000000000000000000000000000000000000000000000000000000002b3" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "000000000000000000000000000000000000000000000000000000000000000b" +
                        "0ab1394581edfa2ef9ca71000000000000000000000000000000000000000000" +
                        "000000000000000000000000000000000000000000000000000000000000000b" +
                        "15abe391df19aef19a4561000000000000000000000000000000000000000000" +
                        "000000000000000000000000000000000000000000000000000000000000000b" +
                        "0ab1394581edfa2ef9ca71000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000060" +
                        "00000000000000000000000000000000000000000000000000000000000000e0" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "fe00000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000020" +
                        "abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18", try ABI.encodeParameters(["tuple(tuple(uint256,bool),tuple(uint256,tuple(bytes,bytes)))", "bytes", "tuple(bool,tuple(bytes,address),bytes)"], [[[18320, true], [691, ["0xab1394581edfa2ef9ca71", "0x15abe391df19aef19a4561"]]], "0xab1394581edfa2ef9ca71", [false, ["0xfe", "0x77656c636f6d6520746f20657468657265756d2e"], "0xabdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18"]]))
        
        XCTAssertEqual("00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf5d" +
                        "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff420336" +
                        "0000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameters(["address", "tuple(bool,tuple(address,address))", "tuple(tuple(address,tuple(int256,int256)),bool)"], ["0x77656c636f6d6520746f20657468657265756d2e", [true, ["0x77656c636f6d6520746f20657468657265756d2e", "0x77656c636f6d6520746f20657468657265756d2e"]], [["0x77656c636f6d6520746f20657468657265756d2e", [-12451, -12451018]], false]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000060" +
                        "00000000000000000000000000000000000000000000000000000000000000a0" +
                        "0000000000000000000000000000000000000000000000000000000000000360" +
                        "0000000000000000000000000000000000000000000000000000000000000003" +
                        "abef150000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "0000000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "0000000000000000000000000000000000000000000000000000000000000100" +
                        "0000000000000000000000000000000000000000000000000000000000000220" +
                        "00000000000000000000000000000000000000000000000000000000001c1435" +
                        "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf2c3ae9" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "0000000000000000000000000000000000000000000000000000000000000060" +
                        "00000000000000000000000000000000000000000000000000000000000000a0" +
                        "00000000000000000000000000000000000000000000000000000000000000e0" +
                        "0000000000000000000000000000000000000000000000000000000000000003" +
                        "abef150000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000004" +
                        "0cdef15100000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000004" +
                        "0abfe15100000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000060" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "000000000000000000000000000000000000000000000000000000000000000b" +
                        "15abe391df19aef19a4561000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "0000000000000000000000000000000000000000000000000000000000000014" +
                        "77656c636f6d6520746f20657468657265756d2e000000000000000000000000" +
                        "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb7c5" +
                        "0000000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000060" +
                        "00000000000000000000000000000000000000000000000000000000001d461b" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000006" +
                        "0abdcf151dae0000000000000000000000000000000000000000000000000000", try ABI.encodeParameters(["bytes", "tuple(tuple(bool,bool,bool),tuple(bytes,bytes,bytes),tuple(bytes,bool,address),tuple(uint256,int256,address))", "tuple(bytes,tuple(tuple(int256,bool),tuple(uint256,bytes)))"], ["0xabef15", [[true, false, true], ["0xabef15", "0xcdef151", "0xabfe151"], ["0x15abe391df19aef19a4561", true, "0x77656c636f6d6520746f20657468657265756d2e"], [1840181, -819184919, "0x77656c636f6d6520746f20657468657265756d2e"]], ["0x77656c636f6d6520746f20657468657265756d2e", [[-18491, false], [1918491, "0xabdcf151dae"]]]]))
        
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000c0" +
                        "0000000000000000000000000000000000000000000000000000000000000160" +
                        "00000000000000000000000081017589ab81017589ab81017589ab81017589ab" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "00000000000000000000000081017589ab81017589ab81017589ab81017589ab" +
                        "0000000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000060" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "0000000000000000000000000000000000000000000000000000000000000003" +
                        "abef150000000000000000000000000000000000000000000000000000000000" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "00000000000000000000000000000000000000000000000000000000000000a0" +
                        "00000000000000000000000077656c636f6d6520746f20657468657265756d2e" +
                        "0000000000000000000000000000000000000000000000000000000000000003" +
                        "abef150000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameters(["tuple(bytes,tuple(address,address))", "tuple(address,address,address,bytes,address)", "tuple(address,tuple(address,tuple(address,bool)))"], [["0xabef15", ["0x77656c636f6d6520746f20657468657265756d2e", "0x77656c636f6d6520746f20657468657265756d2e"]], ["0x77656c636f6d6520746f20657468657265756d2e", "0x77656c636f6d6520746f20657468657265756d2e", "0x77656c636f6d6520746f20657468657265756d2e", "0xabef15", "0x77656c636f6d6520746f20657468657265756d2e"], ["0x81017589ab81017589ab81017589ab81017589ab", ["0x77656c636f6d6520746f20657468657265756d2e", ["0x81017589ab81017589ab81017589ab81017589ab", false]]]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000060" +
                        "0000000000000000000000000000000000000000000000000000000000000120" +
                        "0000000000000000000000000000000000000000000000000000000000000160" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "0000000000000000000000000000000000000000000000000000000000000003" +
                        "abef150000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "0a00000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000020" +
                        "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff" +
                        "0000000000000000000000000000000000000000000000000000000000000060" +
                        "00000000000000000000000000000000000000000000000000000000000000c0" +
                        "0000000000000000000000000000000000000000000000000000000000000180" +
                        "0000000000000000000000000000000000000000000000000000000000000020" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "af00000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000040" +
                        "0000000000000000000000000000000000000000000000000000000000000080" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "af00000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "bc00000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000060" +
                        "00000000000000000000000000000000000000000000000000000000000000a0" +
                        "00000000000000000000000000000000000000000000000000000000000000e0" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "af00000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "bc00000000000000000000000000000000000000000000000000000000000000" +
                        "0000000000000000000000000000000000000000000000000000000000000001" +
                        "de00000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameters(["tuple(bytes,bytes)", "bytes", "tuple(tuple(bytes),tuple(bytes,bytes),tuple(bytes,bytes,bytes))"], [["0xabef15", "0xa"], "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", [["0xaf"], ["0xaf", "0xbc"], ["0xaf", "0xbc", "0xde"]]]))
        
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000056974656d310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000056974656d32000000000000000000000000000000000000000000000000000000", try ABI.encodeParameters(["tuple(string,uint)[]"], [[["item1", 2], ["item2", 3]]]))
        
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000056974656d310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000056974656d32000000000000000000000000000000000000000000000000000000", try ABI.encodeParameters(["tuple(string,uint16)[]"], [[["item1", 2], ["item2", 3]]]))
    }
    
    func testEncodeParametersArrayType() throws {
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006f00000000000000000000000000000000000000000000000000000000000000de", try ABI.encodeParameters(["bool[2]", "uint256[2]"], [[true, false], [111, 222]]))
        
        XCTAssertEqualtry ABI.encodeParameters(["bytes[][]", "string[][]"], [[["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]], [["aaa", "bbb"], ["ccc", "ddd"]]]))
        
        XCTAssertEqual("0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000006f00000000000000000000000000000000000000000000000000000000000000detry ABI.encodeParameters(["bool[2]", "string[2]","uint256[2]", "string[]"], [[true, false], ["aaa", "bbb"], [111, 222], ["ccc", "ddd"]]))
        
        XCTAssertEqual("000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000036161610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000362626200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000006f00000000000000000000000000000000000000000000000000000000000000de000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003636363000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036464640000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameters(["bool[]", "string[2]","uint256[]", "string[2]"], [[true, false], ["aaa", "bbb"], [111, 222], ["ccc", "ddd"]]))
    }
    
    func testEncodeDynamicArrayType_withZeroSize() throws {
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000474657374000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameters(["string", "string[]"], ["test", []]))
        
        XCTAssertEqual("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", try ABI.encodeParameters(["string[][2]"], [[[], []]]))
        
        XCTAssertEqualtry ABI.encodeParameters(["bool[]", "string[2]"], [[], ["123", "456"]]))
        
        XCTAssertEqualtry ABI.encodeParameters(["tuple(bool[],string[2])"], [[[], ["123", "456"]]]))
    }
    
    func testDecodeBoolType() throws {
        XCTAssertEqual(Type(false), try ABI.decodeParameter("bool", "0000000000000000000000000000000000000000000000000000000000000000"))
        XCTAssertEqual(Type(true), try ABI.decodeParameter("bool", "0000000000000000000000000000000000000000000000000000000000000001"))
    }
    
    func testDecodeUintType() throws {
        XCTAssertEqual(Type(BigUInt(255)), try ABI.decodeParameter("uint256", "00000000000000000000000000000000000000000000000000000000000000ff"))
        
        XCTAssertEqual(Type(BigUInt(65535)), try ABI.decodeParameter("uint256", "000000000000000000000000000000000000000000000000000000000000ffff"))
        
        XCTAssertEqual(Type(BigUInt(65536)), try ABI.decodeParameter("uint256", "0000000000000000000000000000000000000000000000000000000000010000"))
        
        XCTAssertEqual(Type(BigUInt("4722366482869645213695")), try ABI.decodeParameter("uint256", "0000000000000000000000000000000000000000000000ffffffffffffffffff"))
        
        XCTAssertEqual(Type(BigUInt.zero), try ABI.decodeParameter("uint256", "0000000000000000000000000000000000000000000000000000000000000000"))
    }
    
    func testDecodeIntType() throws {
        XCTAssertEqual(Type(BigInt.zero), try ABI.decodeParameter("int256", "0000000000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(Type(BigInt(127)), try ABI.decodeParameter("int256", "000000000000000000000000000000000000000000000000000000000000007f"))
        
        XCTAssertEqual(Type(BigInt(32767)), try ABI.decodeParameter("int256", "0000000000000000000000000000000000000000000000000000000000007fff"))
        
        XCTAssertEqual(Type(BigInt("2147483647")), try ABI.decodeParameter("int256", "000000000000000000000000000000000000000000000000000000007fffffff"))
    }
    
    func testDecodeAddressType() throws {
        XCTAssertEqual(Type(Address("0xbe5422d15f39373eb0a97ff8c10fbd0e40e29338")), try ABI.decodeParameter("address", "000000000000000000000000be5422d15f39373eb0a97ff8c10fbd0e40e29338"))
    }
    
    func testDecodeUtf8StringType() throws {
        XCTAssertEqual(Type("Hello, world!"), try ABI.decodeParameter("string", "0000000000000000000000000000000000000000000000000000000000000020" + "000000000000000000000000000000000000000000000000000000000000000d" + "48656c6c6f2c20776f726c642100000000000000000000000000000000000000"))
    }
    
    func testDecodeStaticBytesType() throws {
        XCTAssertEqual(Bytes6(Data([0, 1, 2, 3, 4, 5])), try ABI.decodeParameter("bytes6", "0001020304050000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(Bytes1(Data([0])), try ABI.decodeParameter("bytes1", "0000000000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(Bytes1(Data([127])), try ABI.decodeParameter("bytes1", "7f00000000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(Bytes4("dave".data(using: .utf8)!), try ABI.decodeParameter("bytes4", "6461766500000000000000000000000000000000000000000000000000000000"))
    }
    
    func testDecodeDynamicBytesType() throws {
        XCTAssertEqual(Bytes(Data([0, 1, 2, 3, 4, 5])), try ABI.decodeParameter("bytes", "0000000000000000000000000000000000000000000000000000000000000020" + "0000000000000000000000000000000000000000000000000000000000000006" + "0001020304050000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(Bytes(Data([0])), try ABI.decodeParameter("bytes", "0000000000000000000000000000000000000000000000000000000000000020" + "0000000000000000000000000000000000000000000000000000000000000001" + "0000000000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(Bytes(Data("dave".data(using: .utf8)!)), try ABI.decodeParameter("bytes", "0000000000000000000000000000000000000000000000000000000000000020" + "0000000000000000000000000000000000000000000000000000000000000004" + "6461766500000000000000000000000000000000000000000000000000000000"))
        
        let loremIpsum = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod "
                    + "tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim "
                    + "veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex "
                    + "ea commodo consequat. Duis aute irure dolor in reprehenderit in "
                    + "voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur "
                    + "sint occaecat cupidatat non proident, sunt in culpa qui officia "
                    + "deserunt mollit anim id est laborum."
        XCTAssertEqual(Bytes(Data(loremIpsum.data(using: .utf8)!)), try ABI.decodeParameter("bytes", "0000000000000000000000000000000000000000000000000000000000000020" + "00000000000000000000000000000000000000000000000000000000000001bd" + "4c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73" + "656374657475722061646970697363696e6720656c69742c2073656420646f20" + "656975736d6f642074656d706f7220696e6369646964756e74207574206c6162" + "6f726520657420646f6c6f7265206d61676e6120616c697175612e2055742065" + "6e696d206164206d696e696d2076656e69616d2c2071756973206e6f73747275" + "6420657865726369746174696f6e20756c6c616d636f206c61626f726973206e" + "69736920757420616c697175697020657820656120636f6d6d6f646f20636f6e" + "7365717561742e2044756973206175746520697275726520646f6c6f7220696e" + "20726570726568656e646572697420696e20766f6c7570746174652076656c69" + "7420657373652063696c6c756d20646f6c6f726520657520667567696174206e" + "756c6c612070617269617475722e204578636570746575722073696e74206f63" + "63616563617420637570696461746174206e6f6e2070726f6964656e742c2073" + "756e7420696e2063756c706120717569206f666669636961206465736572756e" + "74206d6f6c6c697420616e696d20696420657374206c61626f72756d2e000000"))
    }
    
    func testDecodeDynamicArrayTest() throws {
        XCTAssertEqual(Type(TypeArray([BigUInt(1), BigUInt(2), BigUInt(3)], "uint256[]")), try ABI.decodeParameter("uint256[]", "0000000000000000000000000000000000000000000000000000000000000020" + "0000000000000000000000000000000000000000000000000000000000000003" + "0000000000000000000000000000000000000000000000000000000000000001" + "0000000000000000000000000000000000000000000000000000000000000002" + "0000000000000000000000000000000000000000000000000000000000000003"))
    }
    
    func testDecodeStaticArrayTest() throws {
        let expected = TypeArray([BigUInt(10), BigUInt(Int.max)], "uint256[2]")
        let actual = try ABI.decodeParameter("uint256[2]", "000000000000000000000000000000000000000000000000000000000000000a" + "0000000000000000000000000000000000000000000000007fffffffffffffff")
        
        XCTAssertEqual(Type(TypeArray([BigUInt(10), BigUInt(Int.max)], "uint256[2]")), actual)
        XCTAssertEqual(expected.values[0] as? BigUInt, (actual?.value as? TypeArray)?.values[0] as? BigUInt)
        XCTAssertEqual(expected.values[1] as? BigUInt, (actual?.value as? TypeArray)?.values[1] as? BigUInt)
    }
    
    func testDecodeArrayStaticType() throws {
        XCTAssertEqual(Type(TypeArray([BigUInt(1), BigUInt(2), BigUInt(3)], "uint256[3]")), try ABI.decodeParameter("uint256[3]", "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003"))

        XCTAssertEqual(Type(TypeArray([true, false], "bool[2]")), try ABI.decodeParameter("bool[2]", "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000"))

        XCTAssertEqual(Type(TypeArray(["abc".data(using: .utf8)!, "def".data(using: .utf8)!], "bytes3[2]")), try ABI.decodeParameter("bytes3[2]", "61626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000"))

        XCTAssertEqual(Type(TypeArray([BigUInt(1), BigUInt(2), BigUInt(3)], "uint256[]")), try ABI.decodeParameter("uint256[]", "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003"))

        XCTAssertEqual(Type(TypeArray([true, false], "bool[]")), try ABI.decodeParameter("bool[]", "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000"))

        XCTAssertEqual(try TypeDecoder.instantiateType("bytes3[]", ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]), try ABI.decodeParameter("bytes3[]", "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000261626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000"))

        XCTAssertEqual(try TypeDecoder.instantiateType("uint256[3][2]", [[BigUInt(1), BigUInt(2), BigUInt(3)], [BigUInt(4), BigUInt(5), BigUInt(6)]]), try ABI.decodeParameter("uint256[3][2]", "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006"))

        XCTAssertEqual(try TypeDecoder.instantiateType("bool[2][2]", [[true, false], [true, false]]), try ABI.decodeParameter("bool[2][2]", "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000"))

        XCTAssertEqual(try TypeDecoder.instantiateType("bytes3[2][1]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]), try ABI.decodeParameter("bytes3[2][1]", "61626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("uint256[][2]", [[BigUInt(1), BigUInt(2), BigUInt(3)], [BigUInt(1), BigUInt(2), BigUInt(3)]]), try ABI.decodeParameter("uint256[][2]", "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c
        
        XCTAssertEqual(try TypeDecoder.instantiateType("bool[][2]", [[true, false], [true, false]]), try ABI.decodeParameter("bool[][2]", "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("bytes3[][1]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]), try ABI.decodeParameter("bytes3[][1]", "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000261626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("uint256[3][]", [[BigUInt(1), BigUInt(2), BigUInt(3)], [BigUInt(1), BigUInt(2), BigUInt(3)]]), try ABI.decodeParameter("uint
        
        XCTAssertEqual(try TypeDecoder.instantiateType("bool[2][]", [[true, false]]), try ABI.decodeParameter("bool[2][]", "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("bytes3[2][]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]), try ABI.decodeParameter("bytes3[2][]", "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000161626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("uint256[][]", [[BigUInt(1), BigUInt(2), BigUInt(3)], [BigUInt(1), BigUInt(2), BigUInt(3)]]), try ABI.decodeParameter("uint256[][]", "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c
        
        XCTAssertEqual(try TypeDecoder.instantiateType("bool[][]", [[true, false], [true, false]]), try ABI.decodeParameter("bool[][]", "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("bytes3[][]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]), try ABI.decodeParameter("bytes3[][]", "000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000261626300000000000000000000000000000000000000000000000000000000006465660000000000000000000000000000000000000000000000000000000000"))
    }
    
    func testDecodeArrayDynamicType() throws {
        XCTAssertEqual(try TypeDecoder.instantiateType("string[2]", ["aaa", "bbb"]), try ABI.decodeParameter("string[2]", "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616161000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036262620000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("bytes[2]", ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]), try ABI.decodeParameter("bytes[2]", "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616263000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036465660000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("string[]", ["aaa", "bbb"]), try ABI.decodeParameter("string[]", "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616161000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036262620000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("bytes[]", ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]), try ABI.decodeParameter("bytes[]", "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616263000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036465660000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("string[2][2]", [["aaa", "bbb"], ["ccc", "ddd"]]), try ABI.decodeParameter("string
        
        XCTAssertEqual(try TypeDecoder.instantiateType("bytes[2][2]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]), try ABI.decodeParameter("bytes[2][2]", "000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616263000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036465660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616263000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036465660000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("string[][2]", [["aaa", "bbb"], ["aaa", "bbb"]]), try ABI.decodeParameter("string
        
        XCTAssertEqual(try TypeDecoder.instantiateType("bytes[][2]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]), try ABI.decodeParameter("bytes
        
        XCTAssertEqual(try TypeDecoder.instantiateType("string[2][]", [["aaa", "bbb"], ["aaa", "bbb"]]), try ABI.decodeParameter("string[2][]", "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616161000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036262620000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616161000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036262620000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("bytes[2][]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]), try ABI.decodeParameter("bytes[2][]", "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616263000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036465660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003616263000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036465660000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("string[][]", [["aaa", "bbb"], ["aaa", "bbb"]]), try ABI.decodeParameter("string
        
        XCTAssertEqual(try TypeDecoder.instantiateType("bytes[][]", [["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]]), try ABI.decodeParameter("bytes
    }
    
    func testDecodeTupleType() throws {
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(address)", ["0xbBF289D846208c16EDc8474705C748aff07732dB"]), try ABI.decodeParameter("tuple(address)", "000000000000000000000000bbf289d846208c16edc8474705c748aff07732db"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(address,address)", ["0xbBF289D846208c16EDc8474705C748aff07732dB", "0xbBF289D846208c16EDc8474705C748aff07732dB"]), try ABI.decodeParameter("tuple(address,address)", "000000000000000000000000bbf289d846208c16edc8474705c748aff07732db" + "000000000000000000000000bbf289d846208c16edc8474705c748aff07732db"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(uint256,uint256)", [BigUInt(5), BigUInt(5)]), try ABI.decodeParameter("tuple(uint256,uint256)", "0000000000000000000000000000000000000000000000000000000000000005" + "0000000000000000000000000000000000000000000000000000000000000005"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(string,string)", ["hello", "world"]), try ABI.decodeParameter("tuple(string,string)", "0000000000000000000000000000000000000000000000000000000000000020" + "0000000000000000000000000000000000000000000000000000000000000040" + "0000000000000000000000000000000000000000000000000000000000000080" + "0000000000000000000000000000000000000000000000000000000000000005" + "68656c6c6f000000000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000005" + "776f726c64000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(bytes,bytes)", ["0x01fe517acd15ff", "0xabcdef12345678"]), try ABI.decodeParameter("tuple(bytes,bytes)", "0000000000000000000000000000000000000000000000000000000000000020" + "0000000000000000000000000000000000000000000000000000000000000040" + "0000000000000000000000000000000000000000000000000000000000000080" + "0000000000000000000000000000000000000000000000000000000000000007" + "01fe517acd15ff00000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000007" + "abcdef1234567800000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(bool,bool)", [false, true]), try ABI.decodeParameter("tuple(bool,bool)", "0000000000000000000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000001"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(uint256,string,bytes)", [BigUInt(4), "what what", "0xabcdef12345678"] as [Any]), try ABI.decodeParameter("tuple(uint256,string,bytes)", "0000000000000000000000000000000000000000000000000000000000000020" + "0000000000000000000000000000000000000000000000000000000000000004" + "0000000000000000000000000000000000000000000000000000000000000060" + "00000000000000000000000000000000000000000000000000000000000000a0" + "0000000000000000000000000000000000000000000000000000000000000009" + "7768617420776861740000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000007" + "abcdef1234567800000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(uint128,string,bytes)", [BigUInt(666), "encode your kids", "0x656e636f646520796f75722077696665"] as [Any]), try ABI.decodeParameter("tuple(uint128,string,bytes)", "0000000000000000000000000000000000000000000000000000000000000020" + "000000000000000000000000000000000000000000000000000000000000029a" + "0000000000000000000000000000000000000000000000000000000000000060" + "00000000000000000000000000000000000000000000000000000000000000a0" + "0000000000000000000000000000000000000000000000000000000000000010" + "656e636f646520796f7572206b69647300000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000010" + "656e636f646520796f7572207769666500000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(string,bytes32,uint256,bool)", ["foo bar", "0xaabbccddeeff0000000000000000000000000000000000000000000000000000", BigUInt(321), true] as [Any]), try ABI.decodeParameter("tuple(string,bytes32,uint256,bool)", "0000000000000000000000000000000000000000000000000000000000000020" + "0000000000000000000000000000000000000000000000000000000000000080" + "aabbccddeeff0000000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000141" + "0000000000000000000000000000000000000000000000000000000000000001" + "0000000000000000000000000000000000000000000000000000000000000007" + "666f6f2062617200000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(uint8,uint8,uint8,uint8,string,address,bool)", [BigUInt(1), BigUInt(2), BigUInt(3), BigUInt(4), "five", "0x0000000000000000000000000000000000000006", true] as [Any]), try ABI.decodeParameter("tuple(uint8,uint8,uint8,uint8,string,address,bool)", "0000000000000000000000000000000000000000000000000000000000000020" + "0000000000000000000000000000000000000000000000000000000000000001" + "0000000000000000000000000000000000000000000000000000000000000002" + "0000000000000000000000000000000000000000000000000000000000000003" + "0000000000000000000000000000000000000000000000000000000000000004" + "00000000000000000000000000000000000000000000000000000000000000e0" + "0000000000000000000000000000000000000000000000000000000000000006" + "0000000000000000000000000000000000000000000000000000000000000001" + "0000000000000000000000000000000000000000000000000000000000000004" + "6669766500000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(tuple(address,address),tuple(uint256,uint256))", [["0x1234567890123456789012345678901234567890", "0x1234567890123456789012345678901234567890"], [BigUInt(5), BigUInt(6)]] as [Any]), try ABI.decodeParameter("tuple(tuple(address,address),tuple(uint256,uint256))", "0000000000000000000000001234567890123456789012345678901234567890" + "0000000000000000000000001234567890123456789012345678901234567890" + "0000000000000000000000000000000000000000000000000000000000000005" + "0000000000000000000000000000000000000000000000000000000000000006"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(tuple(address,address),tuple(uint256,uint256),tuple(string,string))", [["0x1234567890123456789012345678901234567890", "0x1234567890123456789012345678901234567890"], [BigUInt(5), BigUInt(6)], ["a string", "another string"]] as [Any]), try ABI.decodeParameter("tuple(tuple(address,address),tuple(uint256,uint256),tuple(string,string))", "0000000000000000000000000000000000000000000000000000000000000020" + "0000000000000000000000001234567890123456789012345678901234567890" + "0000000000000000000000001234567890123456789012345678901234567890" + "0000000000000000000000000000000000000000000000000000000000000005" + "0000000000000000000000000000000000000000000000000000000000000006" + "00000000000000000000000000000000000000000000000000000000000000a0" + "0000000000000000000000000000000000000000000000000000000000000040" + "0000000000000000000000000000000000000000000000000000000000000080" + "0000000000000000000000000000000000000000000000000000000000000008" + "6120737472696e67000000000000000000000000000000000000000000000000" + "000000000000000000000000000000000000000000000000000000000000000e" + "616e6f7468657220737472696e67000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(string,uint)[]", [["item1", BigUInt(2)] as [Any], ["item2", BigUInt(3)] as [Any]]), try ABI.decodeParameter("tuple(string,uint)[]", "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000056974656d310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000056974656d32000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(string[3],bool)", [["aaa", "bbb", "ccc"], false]), try ABI.decodeParameter("tuple(string[3],bool)", "000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000361616100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003626262000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036363630000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(bool,string[3],bool)", [true, ["aaa", "bbb", "ccc"], false]), try ABI.decodeParameter("tuple(bool,string[3],bool)", "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000361616100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003626262000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036363630000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(bool,string[],bool)", [true, ["aaa", "bbb", "ccc"], false]), try ABI.decodeParameter("tuple(bool,string[],bool)", "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000361616100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003626262000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036363630000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(bool,uint256[3],bool)", [true, [BigUInt(111), BigUInt(222), BigUInt(333)], false]), try ABI.decodeParameter("tuple(bool,uint256[3],bool)", "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006f00000000000000000000000000000000000000000000000000000000000000de000000000000000000000000000000000000000000000000000000000000014d0000000000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(bool,uint256[],bool)", [true, [BigUInt(111), BigUInt(222), BigUInt(333)], false]), try ABI.decodeParameter("tuple(bool,uint256[],bool)", "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006f00000000000000000000000000000000000000000000000000000000000000de000000000000000000000000000000000000000000000000000000000000014d"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(string[3],bool)[]", [[["aaa", "bbb", "ccc"], false], [["ccc", "ddd", "fff"], false]]), try ABI.decodeParameter("tuple(string[3],bool)[]", "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000036161610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000362626200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003636363000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000363636300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003646464000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036666660000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(string[3],bool)[2]", [[["aaa", "bbb", "ccc"], false], [["ccc", "ddd", "fff"], false]]), try ABI.decodeParameter("tuple(string[3],bool)[2]", "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000036161610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000362626200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003636363000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000363636300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003646464000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036666660000000000000000000000000000000000000000000000000000000000"))
        
        XCTAssertEqual(try TypeDecoder.instantiateType("tuple(bool,uint256[3],bool)[]", [[true, [BigUInt(111), BigUInt(222), BigUInt(333)], false], [true, [BigUInt(444), BigUInt(555), BigUInt(666)], false]]), try ABI.decodeParameter("tuple(bool,uint256[3],bool)[]", "000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006f00000000000000000000000000000000000000000000000000000000000000de000000000000000000000000000000000000000000000000000000000000014d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001bc000000000000000000000000000000000000000000000000000000000000022b000000000000000000000000000000000000000000000000000000000000029a0000000000000000000000000000000000000000000000000000000000000000"))
    }
    
    func testDecodeParametersWithTuple() throws {
        try decodeParametersTest(["tuple(address,address)", "tuple(string,string)", "bool"],
                             [["0x1234567890123456789012345678901234567890", "0x1234567890123456789012345678901234567890"],
                              ["hello", "world"],
                              false
                             ],
                             "0000000000000000000000001234567890123456789012345678901234567890" + "0000000000000000000000001234567890123456789012345678901234567890" + "0000000000000000000000000000000000000000000000000000000000000080" + "0000000000000000000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000040" + "0000000000000000000000000000000000000000000000000000000000000080" + "0000000000000000000000000000000000000000000000000000000000000005" + "68656c6c6f000000000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000005" + "776f726c64000000000000000000000000000000000000000000000000000000")
        
        try decodeParametersTest(["string", "tuple(uint256,string)", "bool", "tuple(bytes32,bytes)"],
                             ["the string",
                              [BigUInt(56), "some string"] as [Any],
                              true,
                             ["0x1234567890123456789012345678901234567890123456789012345678901234", "0x129581"]
                             ],
                             "0000000000000000000000000000000000000000000000000000000000000080" + "00000000000000000000000000000000000000000000000000000000000000c0" + "0000000000000000000000000000000000000000000000000000000000000001" + "0000000000000000000000000000000000000000000000000000000000000140" + "000000000000000000000000000000000000000000000000000000000000000a" + "74686520737472696e6700000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000038" + "0000000000000000000000000000000000000000000000000000000000000040" + "000000000000000000000000000000000000000000000000000000000000000b" + "736f6d6520737472696e67000000000000000000000000000000000000000000" + "1234567890123456789012345678901234567890123456789012345678901234" + "0000000000000000000000000000000000000000000000000000000000000040" + "0000000000000000000000000000000000000000000000000000000000000003" + "1295810000000000000000000000000000000000000000000000000000000000")
        
        try decodeParametersTest(["bool",
                                  "tuple(bool,tuple(bool,tuple(bool,bool)))",
                                  "tuple(uint256,tuple(uint256,uint256,tuple(uint256,string)))",
                                  "string"],
                             [true,
                              [false, [true, [false, true]]],
                              [BigUInt(256), [BigUInt(76), BigUInt(67), [BigUInt(1337), "hello"] as [Any]]],
                              "last param"
                             ],
                             "0000000000000000000000000000000000000000000000000000000000000001" + "0000000000000000000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000001" + "0000000000000000000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000001" + "00000000000000000000000000000000000000000000000000000000000000e0" + "0000000000000000000000000000000000000000000000000000000000000200" + "0000000000000000000000000000000000000000000000000000000000000100" + "0000000000000000000000000000000000000000000000000000000000000040" + "000000000000000000000000000000000000000000000000000000000000004c" + "0000000000000000000000000000000000000000000000000000000000000043" + "0000000000000000000000000000000000000000000000000000000000000060" + "0000000000000000000000000000000000000000000000000000000000000539" + "0000000000000000000000000000000000000000000000000000000000000040" + "0000000000000000000000000000000000000000000000000000000000000005" + "68656c6c6f000000000000000000000000000000000000000000000000000000" + "000000000000000000000000000000000000000000000000000000000000000a" + "6c61737420706172616d00000000000000000000000000000000000000000000")
        
        try decodeParametersTest(["string", "tuple(string,string,tuple(string,string))", "bytes", "tuple(bytes,tuple(bytes,string))"],
                             ["hello world",
                              ["what", "is", ["even", "happening"]],
                              "0x696e",
                              ["0x74686973", ["0x676f64666f7273616b656e", "test"]]
                             ],
                             "0000000000000000000000000000000000000000000000000000000000000080" + "00000000000000000000000000000000000000000000000000000000000000c0" + "0000000000000000000000000000000000000000000000000000000000000260" + "00000000000000000000000000000000000000000000000000000000000002a0" + "000000000000000000000000000000000000000000000000000000000000000b" + "68656c6c6f20776f726c64000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000060" + "00000000000000000000000000000000000000000000000000000000000000a0" + "00000000000000000000000000000000000000000000000000000000000000e0" + "0000000000000000000000000000000000000000000000000000000000000004" + "7768617400000000000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000002" + "6973000000000000000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000040" + "0000000000000000000000000000000000000000000000000000000000000080" + "0000000000000000000000000000000000000000000000000000000000000004" + "6576656e00000000000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000009" + "68617070656e696e670000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000002" + "696eb" + "676f64666f7273616b656e000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000004" + "7465737400000000000000000000000000000000000000000000000000000000")
        
        try decodeParametersTest(["string",
                                  "bool",
                                  "tuple(string,tuple(tuple(bool,string,bool),tuple(string,bytes32,bytes)))",
                                  "bytes",
                                  "tuple(bool,tuple(bytes32,address),bytes)"],
                             ["this",
                              true,
                              ["is", [[true, "utter", true], ["madness", "0x1234567890123456789012345678901234567890123456789012345678901234", "0x6275742049206c6f7665206974"]]],
                              "0x6265636175736520697420776f726b73",
                              [true, ["0x1234567890123456789012345678901234567890123456789012345678901234", "0x1337133713371337133713371337133713371337"], "0x6265636175736520697420776f726b736265636175736520697420776f726b73"]
                             ],
                             "00000000000000000000000000000000000000000000000000000000000000a0" + "0000000000000000000000000000000000000000000000000000000000000001" + "00000000000000000000000000000000000000000000000000000000000000eea0" + "0000000000000000000000000000000000000000000000000000000000000007" + "6d61646e65737300000000000000000000000000000000000000000000000000" + "000000000000000000000000000000000000000000000000000000000000000d" + "6275742049206c6f766520697400000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000010" + "6265636175736520697420776f726b7300000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000001" + "1234567890123456789012345678901234567890123456789012345678901234" + "0000000000000000000000001337133713371337133713371337133713371337" + "0000000000000000000000000000000000000000000000000000000000000080" + "0000000000000000000000000000000000000000000000000000000000000020" + "6265636175736520697420776f726b736265636175736520697420776f726b73")
        
        try decodeParametersTest(["tuple(string,tuple(bool,bool))",
                                  "address",
                                  "bytes",
                                  "tuple(bytes,bytes,string,bool,address)",
                                  "int256",
                                  "tuple(int256,uint256,tuple(string,int256,address))"],
                             [["this is more reasonable", [true, false]],
                              "0x1b3F5FE0Fd513E6cbdEE459F0b0e19095FE91958",
                              "0x6c6f6c6f6c6f6c6f6c",
                              ["0xabcdef12345678",
                               "0x87654321fedcba",
                               "bazbar",
                               false,
                               "0xd13b6e9058E58B8677233CEc2315e1D9e77C79C4"],
                              BigInt(-6),
                             [BigInt(-7), BigUInt(5), ["foobar", BigInt(-8), "0xB1eeF147028E9f480DbC5ccaA3277D417D1b85F0"] as [Any]] as [Any]
                             ],
                             "00000000000000000000000000000000000000000000000000000000000000c0" + "0000000000000000000000001b3f5fe0fd513e6cbdee459f0b0e19095fe91958" + "0000000000000000000000000000000000000000000000000000000000000160" + "00000000000000000000000000000000000000000000000000000000000001a0" + "fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa" + "0000000000000000000000000000000000000000000000000000000000000300" + "0000000000000000000000000000000000000000000000000000000000000060" + "0000000000000000000000000000000000000000000000000000000000000001" + "0000000000000000000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000017" + "74686973206973206d6f726520726561736f6e61626c65000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000009" + "6c6f6c6f6c6f6c6f6c0000000000000000000000000000000000000000000000" + "00000000000000000000000000000000000000000000000000000000000000a0" + "00000000000000000000000000000000000000000000000000000000000000e0" + "0000000000000000000000000000000000000000000000000000000000000120" + "0000000000000000000000000000000000000000000000000000000000000000" + "000000000000000000000000d13b6e9058e58b8677233cec2315e1d9e77c79c4" + "0000000000000000000000000000000000000000000000000000000000000007" + "abcdef1234567800000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000007" + "87654321fedcba00000000000000000000000000000000000000000000000000" + "0000000000000000000000000000000000000000000000000000000000000006" + "62617a6261720000000000000000000000000000000000000000000000000000" + "fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9" + "0000000000000000000000000000000000000000000000000000000000000005" + "0000000000000000000000000000000000000000000000000000000000000060" + "0000000000000000000000000000000000000000000000000000000000000060" + "fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8" + "000000000000000000000000b1eef147028e9f480dbc5ccaa3277d417d1b85f0" + "0000000000000000000000000000000000000000000000000000000000000006" + "666f6f6261720000000000000000000000000000000000000000000000000000")
        
        try decodeParametersTest(["tuple(bytes32,bool,bytes32)",
                                  "address",
                                  "tuple(bytes32,bytes32,string)",
                                  "tuple(tuple(address,bool),tuple(address,bytes32),tuple(int256,uint256))"],
                             [["0xffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae",
                               true,
                               "0xffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae"],
                              "0x1234567890123456789012345678901234567890",
                              ["0x0ab3e6dfa1594c15af0000000000000000000000000000000000000000000000",
                               "0xffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae",
                               "string"],
                             [["0x1234567890123456789012345678901234567890", true],
                             ["0x1234567890123456789012345678901234567890", "0xffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae"],
                             [BigInt(-6124612), BigUInt(89000)] as [Any]]
                             ],
                             "ffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae" + "0000000000000000000000000000000000000000000000000000000000000001" + "ffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae" + "0000000000000000000000001234567890123456789012345678901234567890" + "0000000000000000000000000000000000000000000000000000000000000160" + "0000000000000000000000001234567890123456789012345678901234567890" + "0000000000000000000000000000000000000000000000000000000000000001" + "0000000000000000000000001234567890123456789012345678901234567890" + "ffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae" + "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa28bbc" + "0000000000000000000000000000000000000000000000000000000000015ba8" + "0ab3e6dfa1594c15af0000000000000000000000000000000000000000000000" + "ffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae" + "0000000000000000000000000000000000000000000000000000000000000060" + "0000000000000000000000000000000000000000000000000000000000000006" + "737472696e670000000000000000000000000000000000000000000000000000")
    }
    
    func testDecodeParametersArrayType() throws {
        try decodeParametersTest(["bool[2]", "uint256[2]"],
                             [[true, false],
                              [BigUInt(111), 222]
                             ],
                             "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006f00000000000000000000000000000000000000000000000000000000000000de")
        
        try decodeParametersTest(["bytes[][]", "string[][]"],
                             [[["abc".data(using: .utf8)!, "def".data(using: .utf8)!], ["abc".data(using: .utf8)!, "def".data(using: .utf8)!]],
                              [["aaa", "bbb"], ["ccc", "ddd"]]
                             ],

        
        try decodeParametersTest(["bool[2]", "string[2]","uint256[2]", "string[]"],
                             [[true, false],
                              ["aaa", "bbb"],
                              [BigUInt(111), 222],
                              ["ccc", "ddd"]
                             ],
                             "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000006f00000000000000000000000000000000000000000000000000000000000000de
        
        try decodeParametersTest(["bool[]", "string[2]","uint256[]", "string[2]"],
                                 [[true, false],
                                  ["aaa", "bbb"],
                                  [BigUInt(111), 222],
                                  ["ccc", "ddd"]
                                 ],
                             "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001af00000000000000000000000000000000000000000000000000000000000000de000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003636363000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036464640000000000000000000000000000000000000000000000000000000000")
    }
    
    func testDecodeArrayWithDynamicTypeWithZeroSize() throws {
        try decodeParametersTest(["string", "string[]"],
                             ["test",
                              []
                             ],
                             "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000474657374000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
        
        try decodeParametersTest(["string[][2]"],
                             [[
                                [],
                                []]
                             ],
                             "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
        
        try decodeParametersTest(["bool[]", "string[2]"],
                             [[],
                              ["123", "456"]
                             ],

        
        try decodeParametersTest(["tuple(bool[],string[2])"],
                             [[
                                [],
                                ["123", "456"]]
                             ],
                             "0x
    }
    
    func decodeParametersTest(_ solidityTypeList: [String], _ params:[Any], _ encoded: String) throws {
        var expected: [Type] = []
        for (idx, item) in solidityTypeList.enumerated() {
            expected.append(try TypeDecoder.instantiateType(item, params[idx]))
        }
        let actual = try ABI.decodeParameters(solidityTypeList, encoded)
        XCTAssertEqual(expected, actual)
    }
    
    func testBuildFunctionStringTest() throws {
        let caver = Caver("https://kaikas.cypress.klaytn.net:8651")
        if let file  = Bundle(for: type(of: self)).url(forResource: "testFunction", withExtension: "json"){
            let data  = try Data(contentsOf: file)
            let contract = try Contract(caver, String(data: data, encoding: .utf8)!)
     
            XCTAssertEqual("b(string)", try ABI.buildFunctionString(contract.getMethod("b")))
            XCTAssertEqual("g(uint256)", try ABI.buildFunctionString(contract.getMethod("g")))
            XCTAssertEqual("h(bytes32[])", try ABI.buildFunctionString(contract.getMethod("h")))
            
            XCTAssertEqual("staticStruct((uint256,uint256))", try ABI.buildFunctionString(contract.getMethod("staticStruct")))
            XCTAssertEqual("dynamicStruct((uint256,string))", try ABI.buildFunctionString(contract.getMethod("dynamicStruct")))
            XCTAssertEqual("structArray((uint256,uint256[],(uint256,uint256)[])[])", try ABI.buildFunctionString(contract.getMethod("structArray")))
        }else{
            print("no file")
        }
    }
    
    func testBuildEventStringTest() throws {
        let caver = Caver("https://kaikas.cypress.klaytn.net:8651")
        if let file  = Bundle(for: type(of: self)).url(forResource: "testFunction", withExtension: "json"){
            let data  = try Data(contentsOf: file)
            let contract = try Contract(caver, String(data: data, encoding: .utf8)!)
     
            XCTAssertEqual("EVENT(uint256)", try ABI.buildEventString(contract.getEvent("EVENT")))
            XCTAssertEqual("STRUCT_EVENT((uint256,uint256))", try ABI.buildEventString(contract.getEvent("STRUCT_EVENT")))
        }else{
            print("no file")
        }
    }
}

